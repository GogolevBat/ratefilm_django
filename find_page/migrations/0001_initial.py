# Generated by Django 5.1.5 on 2025-02-12 10:52

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Budgets',
            fields=[
                ('id_movie', models.AutoField(primary_key=True, serialize=False)),
                ('value', models.PositiveBigIntegerField(blank=True, null=True)),
                ('currency', models.CharField(blank=True, max_length=30, null=True)),
            ],
            options={
                'db_table': 'budgets',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CompaniesNow',
            fields=[
                ('id_movie', models.AutoField(primary_key=True, serialize=False)),
                ('string_dict', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'companies_now',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Countries',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'countries',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Facts',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('value', models.CharField(max_length=100)),
                ('type', models.CharField(max_length=100)),
                ('spoiler', models.IntegerField(blank=True, null=True)),
                ('id_movie', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'facts',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FactsMovie',
            fields=[
                ('id_movie', models.AutoField(primary_key=True, serialize=False)),
                ('value', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'facts_movie',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FactsPerson',
            fields=[
                ('id_person', models.AutoField(primary_key=True, serialize=False)),
                ('string_dict', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'facts_person',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FilmCountries',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_film', models.IntegerField()),
                ('id_country', models.IntegerField()),
            ],
            options={
                'db_table': 'film_countries',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FilmFact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_movie', models.IntegerField()),
                ('id_fact', models.IntegerField()),
            ],
            options={
                'db_table': 'film_fact',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FilmGenres',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_film', models.IntegerField()),
                ('id_genres', models.IntegerField()),
            ],
            options={
                'db_table': 'film_genres',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FilmPerson',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_movie', models.IntegerField()),
                ('id_person', models.IntegerField()),
                ('id_proffesion', models.IntegerField()),
                ('description', models.CharField(blank=True, max_length=120, null=True)),
                ('place_kinopoisk', models.PositiveIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'film_person',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Genres',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'genres',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='KinopoiskApi',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('value', models.IntegerField(blank=True, null=True)),
                ('update_data', models.DateField(blank=True, null=True)),
                ('max_value', models.IntegerField()),
                ('work', models.IntegerField(blank=True, null=True)),
                ('name_of_people', models.CharField(blank=True, max_length=30, null=True)),
            ],
            options={
                'db_table': 'kinopoisk_api',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Logs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('log_time', models.DateTimeField(blank=True, null=True)),
                ('log_type', models.IntegerField(blank=True, null=True)),
                ('log_message', models.TextField(blank=True, null=True)),
                ('user_name', models.CharField(blank=True, max_length=255, null=True)),
                ('session_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'logs',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MySpisok',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=150)),
                ('name_my', models.CharField(blank=True, max_length=150, null=True)),
                ('my_rate', models.FloatField(blank=True, null=True)),
                ('kp_rate', models.FloatField(blank=True, null=True)),
                ('imdb_rate', models.FloatField(blank=True, null=True)),
                ('voice', models.CharField(blank=True, max_length=150, null=True)),
                ('watch', models.CharField(blank=True, max_length=150, null=True)),
                ('poster', models.TextField(blank=True, null=True)),
                ('isseries', models.IntegerField(blank=True, db_column='isSeries', null=True)),
                ('serieslength', models.IntegerField(blank=True, db_column='seriesLength', null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('age_rating', models.IntegerField(blank=True, null=True)),
                ('year_create', models.TextField(blank=True, null=True)),
                ('status', models.CharField(blank=True, max_length=25, null=True)),
                ('add_id_tg', models.IntegerField(blank=True, null=True)),
                ('type_number', models.IntegerField(blank=True, null=True)),
                ('total_series_length', models.IntegerField(blank=True, null=True)),
                ('backdrop', models.TextField(blank=True, null=True)),
                ('movie_length', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'my_spisok',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Persons',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('photo', models.TextField(blank=True, null=True)),
                ('name', models.CharField(max_length=150)),
                ('enname', models.CharField(blank=True, db_column='enName', max_length=150, null=True)),
                ('sex', models.CharField(blank=True, max_length=10, null=True)),
                ('growth', models.PositiveIntegerField(blank=True, null=True)),
                ('birthday', models.DateField(blank=True, null=True)),
                ('death', models.DateField(blank=True, null=True)),
                ('age', models.PositiveIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'persons',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PersonSpouse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_person', models.PositiveIntegerField()),
                ('id_spouse', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'person_spouse',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PinFilm',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_film', models.IntegerField()),
                ('id_telegram', models.IntegerField()),
                ('data_pin', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'pin_film',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Proffesions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('eng_name', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'proffesions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RateTitle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_telegram', models.IntegerField()),
                ('id_film', models.IntegerField()),
                ('rate', models.FloatField()),
                ('date_rate', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'rate_title',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ReasonSkipApiTask',
            fields=[
                ('id_task', models.AutoField(primary_key=True, serialize=False)),
                ('reason', models.TextField()),
            ],
            options={
                'db_table': 'reason_skip_api_task',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RulesMachine',
            fields=[
                ('id_machine', models.AutoField(primary_key=True, serialize=False)),
                ('count_last_api', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'rules_machine',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SequelsAndPrequels',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_movie', models.IntegerField()),
                ('id_sap_film', models.IntegerField()),
            ],
            options={
                'db_table': 'sequels_and_prequels',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SimilarMovies',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_movie', models.IntegerField()),
                ('id_similar_film', models.IntegerField()),
            ],
            options={
                'db_table': 'similar_movies',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Spouses',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=30, null=True)),
                ('divorced', models.IntegerField(blank=True, null=True)),
                ('children', models.IntegerField(blank=True, null=True)),
                ('divorced_reason', models.CharField(blank=True, max_length=50, null=True)),
                ('relation', models.CharField(blank=True, max_length=30, null=True)),
            ],
            options={
                'db_table': 'spouses',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TelegramUserSettings',
            fields=[
                ('id_telegram', models.AutoField(primary_key=True, serialize=False)),
                ('premium_user', models.IntegerField()),
                ('date_end_premium', models.DateTimeField(blank=True, null=True)),
                ('date_start', models.DateTimeField(blank=True, null=True)),
                ('last_action', models.DateTimeField(blank=True, null=True)),
                ('show_photos_in_open_title_flag', models.IntegerField(blank=True, null=True)),
                ('show_photos_in_pin_titles_flag', models.IntegerField(blank=True, null=True)),
                ('show_photos_in_top_titles_flag', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'telegram_user_settings',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TrailersNow',
            fields=[
                ('id_movie', models.AutoField(primary_key=True, serialize=False)),
                ('string_dict', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'trailers_now',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TypeTitle',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
                ('slug', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'type_title',
                'managed': False,
            },
        ),
    ]
